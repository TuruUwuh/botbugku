/*
SCRIPT AKIRAA BOT BY BANG SYAII 
* ig: Akira_art12
*WhatsApp: wa.me/6283842839555
*,Jangan Perjual belikan script ini jika ada yang menjual tanpa izin mohon laporkan ke saya dan jangan harap ada update Script ini kedepannya !!!
*/

let { sticker5 } = require('../lib/sticker.js');
let axios = require('axios');
let uploadFile = require("../lib/uploadFile.js");

let handler = async (m, { conn, text }) => {
  let q = m.quoted ? m.quoted : m;
  let mime = (q.msg || q).mimetype || '';
  let reply;

  if (text && m.quoted) {
    if (m.quoted.sender) {
      reply = {
        "name": await conn.getName(m.quoted.sender),
        "text": m.quoted.text || '',
        "chatId": m.chat.split('@')[0],
      };
    }
  } else if (text && !m.quoted) {
    reply = {};
  } else if (!text && m.quoted) {
    if (m.quoted.text) {
      text = m.quoted.text || '';
    }
    reply = {};
  } else {
    throw "Masukkan teks atau balas teks yang ingin dijadikan quote!";
  }

  let img = await q.download?.();

  let pp = await conn.profilePictureUrl(m.sender, 'image').catch(_ => 'https://telegra.ph/file/ce3fd83d90be494079357.jpg');
if (mime) {
  const obj = {
    type: "quote",
    format: "png",
    backgroundColor: "#FFFFFF",
    width: 512,
    height: 768,
    scale: 2,
    "messages": [{
      "entities": [],
      "media": {
        "url": await TelegraPh(img)
      },
      avatar: true,
      from: {
        id: 1,
        name: await conn.getName(m.sender),
        photo: {
          url: pp
        }
      },
      text: text || '',
      replyMessage: reply
    }]
  };
  const json = await axios.post('https://server-id.caliph.my.id/generate', obj, {
    headers: {
      'Content-Type': 'application/json'
    }
  });

  const buffer = Buffer.from(json.data.result.image, 'base64');
  conn.sendImageAsSticker(m.chat, buffer, m, {
                    packname: `${global.packname}`,
                    author: `${global.author}`
                })
 } else {
 const obj = {
    type: "quote",
    format: "png",
    backgroundColor: "#FFFFFF",
    width: 512,
    height: 768,
    scale: 2,
    "messages": [{
      "entities": [],
      avatar: true,
      from: {
        id: 1,
        name: await conn.getName(m.sender),
        photo: {
          url: pp
        }
      },
      text: text || '',
      replyMessage: reply
    }]
  };
 
  const json = await axios.post('https://server-id.caliph.my.id/generate', obj, {
    headers: {
      'Content-Type': 'application/json'
    }
  });

  const buffer = Buffer.from(json.data.result.image, 'base64');
  conn.sendImageAsSticker(m.chat, buffer, m, {
                    packname: `${global.packname}`,
                    author: `${global.author}`
                })
  }
};

handler.help = ['qc'];
handler.tags = ['sticker'];
handler.command = /^(qc|quotely)$/i;

module.exports = handler;



new

let { sticker5 } = require('../lib/sticker.js')
let axios = require('axios')

let handler = async (m, { conn, args }) => {
let text
    if (args.length >= 1) {
        text = args.slice(0).join(" ")
    } else if (m.quoted && m.quoted.text) {
        text = m.quoted.text
    } else throw "Input teks atau reply teks yang ingin di jadikan quote!"
   if (!text) return m.reply('masukan text')
   if (text.length > 100) return m.reply('Maksimal 100 Teks!')

let randomColor = ['#ef1a11', '#89cff0', '#660000', '#87a96b', '#e9f6ff', '#ffe7f7', '#ca86b0', '#83a3ee', '#abcc88', '#80bd76', '#6a84bd', '#5d8d7f', '#530101', '#863434', '#013337', '#133700', '#2f3641', '#cc4291', '#7c4848', '#8a496b', '#722f37', '#0fc163', '#2f3641', '#e7a6cb', '#64c987', '#e6e6fa', '#ffa500'];

const apiColor = randomColor[Math.floor(Math.random() * randomColor.length)];

    let pp = await conn.profilePictureUrl(m.sender, 'image').catch(_ => 'https://i.ibb.co/2WzLyGk/profile.jpg')

   const obj = {
      "type": "quote",
      "format": "png",
      "backgroundColor": apiColor,
      "width": 512,
      "height": 768,
      "scale": 2,
      "messages": [{
         "entities": [],
         "avatar": true,
         "from": {
            "id": 1,
            "name": m.name,
            "photo": {
               "url": pp
            }
         },
         "text": text,
         "replyMessage": {}
      }]
   }
   const json = await axios.post('https://quote.btch.bz/generate', obj, {
      headers: {
         'Content-Type': 'application/json'
      }
   })
   const buffer = Buffer.from(json.data.result.image, 'base64')
   let stiker = await sticker5(buffer, false, global.packname, global.author)
    if (stiker) return conn.sendFile(m.chat, stiker, 'Quotly.webp', '', m)
}

handler.help = ['qc2']
handler.tags = ['sticker']
handler.command = /^(qc2|quotely2)$/i

module.exports = handler


case by ShinChan
case 'qc': {
                const {
                    quote
                } = require('./lib/quote.js')
                if (!q) return paycall('Enter Text')
                let ppnyauser = await await conn.profilePictureUrl(m.sender, 'image').catch(_ => 'https://telegra.ph/file/ce3fd83d90be494079357.jpg')
                try {
                const rest = await quote(q, pushname, ppnyauser)
                conn.sendImageAsSticker(m.chat, rest.result, m, {
                    packname: `${global.packname}`,
                    author: `${global.author}`
                })
                } catch (error) {
        console.error(error);
        return m.reply('Error Huwaa.');
    }
            }
            break